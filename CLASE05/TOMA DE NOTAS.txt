ARRAYS

cuando se recorre un array no hay que estar atentos de no pasarse del indice determinado ya que si iteramos un numero mayor estariamos accediendo a otra zona de memoria, el programa compila igual y sobre escribe datos en espacios no reservados, de esta manera al declarar una nueva variable el programa entra en conflicto ya que estaria trabajando con datos erroneos de otras variable o arrays. la importancia de los defines radica en poder ordenat en una palabra descriptiva un valor que se repetira dentro del codigo de esta manera evitamos este tipo de conflictos. ----> esto se EVITA CON UN #define MAX_ITERACIONES

la dclaracion de arrays en C solo soportan numero positivos

al momento de llamar a un elemento individual del array (por ejemplo; &num[i];) si escribimos el "&" ya que estamos apuntando a un valor especifico. de lo contrario, si no lo escribimos lo que estariamos llamando es al array entero y el compilador sobre escribiria los datos en la primer direccion de memoria (ejemplo: Ax01, primer espacio en memoria del array declarado)
posicuion 0.

EJEMPLO:

decir,				scanf(& array[i]);	

seria lo mimos que decir,	&array[0] == array;


para la proxima clase:

lleer sobre:

	-burbujeo
	-algoritmo de insersion 
	-quick sort

ultimas 2 paginas adicionales en pdf del campus.

CONSIGNAS CLASE05


FUNCION CALCULA PROMEDIO
FUNCION CALCULA MAXIMO
FUNCION CALCULA MINIMO

FUNCION DA DE ALTA EMPLEADO:
	utiliza -1 para que ele espacio invalido no lo calcule dentro del promedio.
	Iniciar el array con un valor que me indique que el espacio esta vacio y que el 	programa se de cuenta que no debe calcular con ese espacio. (-1).

FUNCION MODIFICAR EMPLEADO

DAR DE BAJA EMPLEADO

